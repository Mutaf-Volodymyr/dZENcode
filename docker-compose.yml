services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dZENcode
    volumes:
      - .:/app
      - ./static:/app/static
      - ./media:/app/media
    env_file:
      - .env
    networks:
      - backend
    command: >
      sh -c "sleep 3 &&
             echo '===> Запускаем миграции...' &&
             python manage.py migrate &&
             echo '===> Проброс статических файлов'
             python manage.py collectstatic --noinput &&
             echo '===> Запускаем Uvicorn...' &&
             uvicorn config.asgi:application --host 0.0.0.0 --port 8000"

  redis:
    image: redis:alpine
    env_file:
      - .env
    container_name: ${REDIS_HOST}
    restart: always
    networks:
      - backend
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 3

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery_worker
    command: celery -A config worker --loglevel=info
    volumes:
      - ./media:/app/media
    env_file:
      - .env
    environment:
      - SECRET_KEY=django-insecure-v#7+xsy6p%3o6@vq_t#lc2!6(ctwt#0&#^86+rya(hvntif*0-
    depends_on:
      - redis

    networks:
      - backend

  nginx:
    image: nginx:latest
    container_name: nginx_server
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/static:ro
      - ./media:/media:ro
    depends_on:
      - web
    networks:
      - backend

volumes:
  mysql_data:
  static_volume:
  media_volume:

networks:
  backend:
    driver: bridge